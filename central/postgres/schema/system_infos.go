// Code generated by pg-bindings generator. DO NOT EDIT.

package schema

import (
	"reflect"

	"github.com/stackrox/rox/generated/storage"
	"github.com/stackrox/rox/pkg/postgres"
	schemaPkg "github.com/stackrox/rox/pkg/postgres/schema"
	"github.com/stackrox/rox/pkg/postgres/walker"
)

var (
	// CreateTableSystemInfosStmt holds the create statement for table `system_infos`.
	CreateTableSystemInfosStmt = &postgres.CreateStmts{
		GormModel: (*SystemInfos)(nil),
		Children:  []*postgres.CreateStmts{},
	}

	// SystemInfosSchema is the go schema for table `system_infos`.
	SystemInfosSchema = func() *walker.Schema {
		schema := schemaPkg.GetSchemaForTable("system_infos")
		if schema != nil {
			return schema
		}
		schema = walker.Walk(reflect.TypeOf((*storage.SystemInfo)(nil)), "system_infos")
		schemaPkg.RegisterTable(schema, CreateTableSystemInfosStmt)
		return schema
	}()
)

const (
	SystemInfosTableName = "system_infos"
)

// SystemInfos holds the Gorm model for Postgres table `system_infos`.
type SystemInfos struct {
	BackupInfoRequestorName string `gorm:"column:backupinfo_requestor_name;type:varchar"`
	Serialized              []byte `gorm:"column:serialized;type:bytea"`
}
